apiVersion: apps/v1
kind: Deployment
metadata:
  name: coworking
  labels:
    name: coworking
spec:
  replicas: 1
  selector:
    matchLabels:
      service: coworking
  template:
    metadata:
      labels:
        service: coworking
    spec:
      containers:
      - name: coworking
        image: 086483470533.dkr.ecr.us-east-2.amazonaws.com/coworking:17
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health_check
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 2
        readinessProbe:
          httpGet:
            path: "/readiness_check"
            port: 5153
          initialDelaySeconds: 5
          timeoutSeconds: 5
        env:
          - name: DB_USERNAME
            valueFrom:
              configMapKeyRef:
                name: postgresql-service-config
                key: DB_USERNAME
          - name: DB_NAME
            valueFrom:
              configMapKeyRef:
                name: postgresql-service-config
                key: DB_NAME
          - name: DB_HOST
            valueFrom:
              configMapKeyRef:
                name: postgresql-service-config
                key: DB_HOST
          - name: DB_PORT
            valueFrom:
              configMapKeyRef:
                name: postgresql-service-config
                key: DB_PORT
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysecret
                key: DB_PASSWORD
        command: ["sh", "-c", "alembic upgrade head && python3 app.py"]
      restartPolicy: Always
